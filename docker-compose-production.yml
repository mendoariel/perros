version: "3.8"

networks:
  web:
    external: true

volumes:
  postgres_data:
    name: postgres_data_peludosclick

services:
  peludosclick_frontend_service:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: angular-frontend
    command: npm run serve:ssr
    ports:
      - '9002:9002'
    environment:
      - NODE_ENV=production
      - PORT=9002
    depends_on:
      - peludosclick_backend
    volumes:
      - ./frontend:/alberto/frontend/src/app
      - /alberto/src/app/node_modules
    labels:
      - traefik.http.routers.peludosclick_frontend_service.rule=Host(`www.peludosclick.com`,`peludosclick.com`)
      - traefik.http.routers.peludosclick_frontend_service.tls=true
      - traefik.http.routers.peludosclick_frontend_service.tls.certresolver=lets-encrypt
      - traefik.port=9002
    networks:
      - web
  
  peludosclick_backend:
    build: 
      context: ./backend-vlad
      dockerfile: production.Dockerfile
      target: production
    container_name: peludosclickbackend
    volumes:
      - ./backend-vlad:/alberto/backend/src/app
      - /alberto/backend/src/app/node_modules
    command: npm run start:prod
    ports:
      - '3335:3335'
    depends_on: 
      - postgres
    env_file: "./backend-vlad/.my-env-production"
    labels:
      - traefik.http.routers.peludosclick_backend.rule=Host(`api.peludosclick.com`)
      - traefik.http.routers.peludosclick_backend.tls=true
      - traefik.http.routers.peludosclick_backend.tls.certresolver=lets-encrypt
      - traefik.port=3335
    networks:
      - web
  # Our Postgres Database for NestJS to connect to
  postgres:
    image: postgres:10.4
    environment:
      POSTGRES_USER: Silvestre1993
      POSTGRES_PASSWORD: iendlshLANDHG423423480
      POSTGRES_DB: peludosclick
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    labels:
      - traefik.enable=true
    networks:
      - web
    restart: always

  # The Postgres Admin tool if we want to run some custom queries and so on against our Database
  postgresadmin:
    image: dpage/pgadmin4:4.28
    depends_on: 
       - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: albertdesarrolloweb@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Yamaha600
    ports:
      - 5050:5050
    labels:
      - traefik.http.routers.postgresadmin.rule=Host(`pgadmin.peludosclick.com`)
      - traefik.http.routers.postgresadmin.tls=true
      - traefik.http.routers.postgresadmin.tls.certresolver=lets-encrypt
      - traefik.port=5050
    networks:
      - web

  # Add this new service
  backup:
    build:
      context: ./backups
      dockerfile: Dockerfile
    environment:
      - TZ=America/Argentina/Buenos_Aires
    volumes:
      - ./backups:/var/backups/peludosclick
      - ./backups/logs:/var/log/peludosclick
    depends_on:
      - postgres
    networks:
      - web
    restart: always
