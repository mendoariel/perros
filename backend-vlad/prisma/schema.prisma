generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int        @id @default(autoincrement())
  createdAt            DateTime   @map("create_at") @default(now())
  updatedAt            DateTime   @map("update_at") @default(now()) @updatedAt
  email                String     @unique
  hash                 String
  hashedRt             String? @map("hashed_rt")
  username             String?
  role                 Role
  hashPasswordRecovery String?    @map("hash_password_recovery")
  userStatus           UserStatus @map("user_status")
  hashToRegister     String @map("hash_to_register")
  phonenumber          String?
  medals               Medal[]

  @@map("users")
}

model Medal {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @map("create_at") @default(now())
  updatedAt     DateTime   @map("update_at") @default(now()) @updatedAt
  ownerId       Int @map("owner_id")
  status        MedalState
  image         String?
  description   String?
  medalString  String @map("medal_string") @unique
  pet_name      String @map("pet_name")
  registerHash String @map("register_hash")
  owner         User       @relation(fields: [ownerId], references: [id])

  @@map("medals")
}

model VirginMedal {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @map("create_at") @default(now())
  updatedAt     DateTime?  @map("update_at") @updatedAt
  status        MedalState
  medalString  String   @map("medal_string")  @unique
  registerHash String @map("register_hash")

  @@map("virgin_medals")
}

enum Role {
  VISITOR
  FRIAS_EDITOR
  REGISTER
}

enum MedalState {
  VIRGIN
  ENABLED
  DISABLED
  DEAD
  REGISTER_PROCESS
  PENDING_CONFIRMATION
  INCOMPLETE
  REGISTERED
}

enum UserStatus {
  ACTIVE
  PENDING
  DISABLED
}
