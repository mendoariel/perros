generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int        @id @default(autoincrement())
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @default(now()) @updatedAt
  email                String     @unique
  hash                 String
  hashedRt             String?
  username             String?
  role                 Role
  hashPasswordRecovery String?    @map("hashPasswordRecovery")
  userStatus           UserStatus
  hashToRegister       String     @map("hash_to_register")
  medals               Medal[]

  @@map("users")
}

model Medal {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  ownerId      Int
  status       MedalState
  image        String?
  medalString  String     @unique @map("medal_string")
  petName      String     @map("pet_name")
  registerHash String     @map("register_hash")
  owner        User       @relation(fields: [ownerId], references: [id])

  @@map("medals")
}

model VirginMedal {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?  @updatedAt
  status       MedalState
  medalString  String     @unique @map("medal_string")
  registerHash String     @unique @map("register_hash")

  @@map("virgin_medals")
}

enum Role {
  VISITOR
  FRIAS_EDITOR
  REGISTER
}

enum MedalState {
  VIRGIN
  ENABLED
  DISABLED
  DEAD
  REGISTER_PROCESS
  PENDING_CONFIRMATION
  INCOMPLETE
  REGISTERED
}

enum UserStatus {
  ACTIVE
  PENDING
  DISABLED
}
