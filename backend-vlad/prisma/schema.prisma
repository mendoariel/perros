generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int        @id @default(autoincrement())
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  email                String     @unique
  hash                 String
  hashedRt             String?
  username             String?
  role                 Role
  hashPasswordRecovery String?
  hashToRegister       String
  userStatus           UserStatus
  medals               Medal[]

  @@map("users")
}

model Medal {
  id           Int        @id @default(autoincrement())
  registerHash String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  ownerId      Int
  medalString  String     @unique
  namePet      String
  status       MedalState
  owner        User       @relation(fields: [ownerId], references: [id])

  @@map("medals")
}

model VirginMedal {
  id           Int        @id @default(autoincrement())
  medalString  String     @unique
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  registerHash String     @unique
  status       MedalState

  @@map("virgin_medals")
}

enum Role {
  VISITOR
  FRIAS_EDITOR
  REGISTER
}

enum MedalState {
  VIRGIN
  ENABLED
  DISABLED
  DEAD
  REGISTER_PROCESS
  PENDING_CONFIRMATION
  INCOMPLETE
}

enum UserStatus {
  ACTIVE
  PENDING
  DISABLED
}
